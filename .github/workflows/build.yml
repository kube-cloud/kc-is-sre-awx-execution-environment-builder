name: Build and Publish AWX Execution Environment

on:
  push:
    branches:
      - '**'
    tags:
      - '**'
env:
  AWX_EE_IMAGE_REPOSITORY: quay.io/kube_cloud/awx-ee

jobs:
  build-awx-ee:
    runs-on: [ubuntu-22.04]
    steps:
      - name: Checkout AWX-EE repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible-builder

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Determine AWX-EE Docker Image TAG
        id: determine-image-tag
        run: |
          if [[ "${{ github.ref }}" == refs/heads/main || "${{ github.ref }}" == refs/heads/develop ]]; then
            echo "TAG=latest" >> $GITHUB_ENV
            echo "PUSH=true" >> $GITHUB_ENV
            PUSH=true
          elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAG=$(echo "${{ github.ref }}" | sed 's/refs\/tags\///')
            PUSH=true
            echo "TAG=${TAG}" >> $GITHUB_ENV
            echo "PUSH=true" >> $GITHUB_ENV
          else
            TAG=$(echo "${{ github.ref }}" | sed 's/refs\/heads\///')
            PUSH=false
            echo "TAG=${TAG}" >> $GITHUB_ENV
            echo "PUSH=false" >> $GITHUB_ENV
          fi
          echo "AWX-EE TAG : $TAG"

      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Generate AWX-EE Dockerfile and Context
        run: |
          ansible-builder create -v3 --output-file=Dockerfile
          cat context/Dockerfile

      - name: Build AWX-EE Docker Image
        uses: docker/build-push-action@v6
        with:
          context: "context"
          push: false
          tags: "${{ env.AWX_EE_IMAGE_REPOSITORY }}:${{ env.TAG }}"
      
      - name: Scan AWX-EE Docker Image Vulnerabilities Trivy
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: "${{ env.AWX_EE_IMAGE_REPOSITORY }}:${{ env.TAG }}"
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Publish AWX-EE Docker Image
        if: ${{ env.PUSH }} == 'true'
        uses: docker/build-push-action@v6
        with:
          context: "context"
          push: true
          tags: "${{ env.AWX_EE_IMAGE_REPOSITORY }}:${{ env.TAG }}"
